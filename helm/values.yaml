# Default values for greeter

messages:
  replicaCount: 1
  image:
    repository: toboregistry.azurecr.io/example-services/greeter
    pullPolicy: IfNotPresent
    tag: 1.0.0
  service:
    type: ClusterIP
  ingress:
    enabled: true
    annotations: {
      kubernetes.io/ingress.class: nginx,
      nginx.ingress.kubernetes.io/rewrite-target: /$2
      # kubernetes.io/tls-acme: "true"
    }
    paths: [
      "/greeter/messages(/|$)(.*)"
    ]
  redis:
    addr: ""
    credsFile: "/secrets/redis/redis-creds.json"
  db:
    addr: ""
    credsFile: "/secrets/db/db-creds.json"
  auth:
    credsFile: "/secrets/auth/auth-token-creds.json"
  volumes: []
  volumeMounts: []

auth:
  replicaCount: 1
  image:
    repository: toboregistry.azurecr.io/example-services/login
    pullPolicy: IfNotPresent
    tag: 1.0.0
  service:
    type: ClusterIP
  ingress:
    enabled: true
    annotations: {
      kubernetes.io/ingress.class: nginx,
      nginx.ingress.kubernetes.io/rewrite-target: /$2
      # kubernetes.io/tls-acme: "true"
    }
    paths: [
      "/greeter/auth(/|$)(.*)"
    ]
  redis:
    addr: ""
    credsFile: "/secrets/redis/redis-creds.json"
  db:
    addr: ""
    credsFile: "/secrets/db/db-creds.json"
  auth:
    credsFile: "/secrets/auth/auth-token-creds.json"
  volumes: []
  volumeMounts: []

ui:
  replicaCount: 1
  image:
    repository: toboregistry.azurecr.io/example-services/greeter-ui
    pullPolicy: IfNotPresent
    tag: 1.0.0
  service:
    type: ClusterIP
  ingress:
    enabled: true
    annotations: {
      kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    }
    paths: [
      "/greeter(/|$)(.*)"
    ]
