#
# Builder
#
FROM golang:alpine as builder

# Git is required for fetching the dependencies.
RUN apk update && \
    apk add --no-cache git ca-certificates tzdata && \
    update-ca-certificates

# Copy code into builder
RUN mkdir /app
COPY . /app

WORKDIR /app

# Fetch dependencies
RUN go mod download
RUN go mod verify

# Build a statically linked debugger
RUN CGO_ENABLED=0 go get -ldflags '-s -w -extldflags=-static' github.com/go-delve/delve/cmd/dlv
# Build statically linked app
RUN CGO_ENABLED=0 go build -gcflags="all=-N -l" -ldflags="-extldflags=-static" -o app ./cmd/main.go

# 
# Runtime
#
# Base on something with a basic shell (statically compiled against musl)
FROM busybox:musl

# Import from builder
COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=builder /app/app /usr/bin/app
COPY --from=builder /go/bin/dlv /usr/bin/dlv

# Create unprivileged appuser
ENV USER="appuser" \
    UID="10001"
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    "${USER}"

# Use an unprivileged user.
USER appuser:appuser

ENV HTTP_PORT="8080" \
    REDIS_DSN="redis:6379" \
    ACCESS_TOKEN_SECRET="secret" \
    ACCESS_TOKEN_EXPIRY="5" \
    REFRESH_TOKEN_SECRET="secret" \
    REFRESH_TOKEN_EXPIRY="60"

#  "--log-output=debugger,debuglineerr,gdbwire,lldbout,rpc", \
ENTRYPOINT [ "dlv", \
    "--listen=:40000", \
    "--headless=true", \
    "--log=true", \
    "--log-output=debugger,debuglineerr", \
    "--api-version=2", \
    "--accept-multiclient", \
    "exec", "/usr/bin/app"]

EXPOSE 8080
EXPOSE 40000
